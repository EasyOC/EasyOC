@using OrchardCore.OpenId.ViewModels
@model OpenIdValidationSettingsViewModel

<p class="alert alert-warning">@T["The current tenant will be reloaded when the settings are saved."]</p>

<p class="alert alert-warning">
    @T["To be able to validate tokens issued by a separate tenant, " +
       "you must register a custom scope in the server options " +
       "of the tenant hosting the authorization server."]
</p>

<div class="mb-3" asp-validation-class-for="Tenant">
    <label asp-for="Tenant">@T["Authorization server tenant"]</label>
    <select asp-for="Tenant" class="form-select">
        <option value="" selected="@(Model.Tenant == null)">(none)</option>
        @foreach (var tenant in Model.AvailableTenants)
        {
            <option value="@tenant" selected="@(Model.Tenant == tenant)">@tenant</option>
        }
    </select>
    <span asp-validation-for="Tenant"></span>
</div>

<div class="mb-3" asp-validation-class-for="Authority">
    <label asp-for="Authority">@T["Authority"]</label>
    <input asp-for="Authority" class="form-control" />
    <span asp-validation-for="Authority"></span>
    <span class="hint">@T["The address of the remote OpenID Connect server. Using a HTTPS address is strongly recommended."]</span>
</div>

<div class="mb-3" asp-validation-class-for="Audience">
    <label asp-for="Audience">@T["Audience"]</label>
    <input asp-for="Audience" class="form-control" />
    <span asp-validation-for="Audience"></span>
    <span class="hint">@T["The unique name associated with this tenant. If none is provided, the tenant name is automatically used as the default audience."]</span>
</div>

<div class="mb-3" asp-validation-class-for="DisableTokenTypeValidation">
    <div class="form-check">
        <input type="checkbox" class="form-check-input" asp-for="DisableTokenTypeValidation">
        <label class="form-check-label" asp-for="DisableTokenTypeValidation">@T["Disable token type validation"]</label>
        <span class="hint dashed">@T["Token type validation can be disabled to accept JWT tokens issued by servers that don't support the 'at+jwt' type header."]</span>
    </div>
</div>

    <script at="Foot">
    $(function () {
        var authority = $('#@Html.IdFor(model => model.Authority)');
        var audience = $('#@Html.IdFor(model => model.Audience)');
        var tenant = $('#@Html.IdFor(model => model.Tenant)');
        var disableTokenTypeValidation = $('#@Html.IdFor(model => model.DisableTokenTypeValidation)');

        tenant.change(function () {
            if (tenant.val() != '') {
                authority.val(null);
                authority.parent().hide();
                audience.val(null);
                audience.parent().hide();
                disableTokenTypeValidation.val(false);
                disableTokenTypeValidation.parent().hide();
            }
            else {
                authority.parent().show();
                audience.parent().show();
                disableTokenTypeValidation.parent().show();
            }
        });

        tenant.trigger('change');
    });
    </script>
