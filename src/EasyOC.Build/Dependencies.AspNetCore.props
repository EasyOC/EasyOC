<Project>

	<!-- Default TFMs to use when building and packaging -->
	<PropertyGroup>

		<!-- TFM used when coding in Visual Studio and when creating templates -->
		<!-- All 'template.json' should provide a 'choice' for the default TFM -->
		<DefaultTargetFramework>net8.0</DefaultTargetFramework>

		<!-- TFMs used to build the abstractions and modules, by convention the default TFM is at the first position -->
		<!-- In a cross-targeting build, some assets are only copied on the first TFM, by convention the default TFM -->
		<CommonTargetFrameworks Condition="'$(CommonTargetFrameworks)' == ''">net8.0</CommonTargetFrameworks>
	</PropertyGroup>

	<!-- Detect if the solution is opened in VS to limit the TFMs that are analyzed by Roslyn for performance reasons -->
	<PropertyGroup Condition="'$(BuildingInsideVisualStudio)' == 'true' or '$(BuildingByReSharper)' == 'true'">
		<CommonTargetFrameworks>$(DefaultTargetFramework)</CommonTargetFrameworks>
	</PropertyGroup>

	<!-- These versions are used for the NuGet packages that are dependent on the current TFM -->
	<!-- Versions are preset for the default TFM (there may be no TFM in an evaluation phase) -->
	<PropertyGroup>
		<AspNetCorePackagesVersion>8.0.0</AspNetCorePackagesVersion>
		<MicrosoftExtensionsPackagesVersion>8.0.0</MicrosoftExtensionsPackagesVersion>
	</PropertyGroup>

	<!-- When dual-targeting frameworks, add both of them to CommonTargetFrameworks above, when add PropertyGroups like
  below. -->
	<!--<PropertyGroup Condition="$(TargetFramework) == 'net7.0'">
    <AspNetCorePackagesVersion>7.0.14</AspNetCorePackagesVersion>
    <MicrosoftExtensionsPackagesVersion>7.0.14</MicrosoftExtensionsPackagesVersion>
  </PropertyGroup>-->

	<!-- 'Microsoft.AspNetCore' packages that are not included in the ASP.NET Core shared framework -->
	<ItemGroup>
		<PackageManagement Include="Microsoft.AspNetCore.Authentication.Facebook" Version="$(AspNetCorePackagesVersion)" />
		<PackageManagement Include="Microsoft.AspNetCore.Authentication.Google" Version="$(AspNetCorePackagesVersion)" />
		<PackageManagement Include="Microsoft.AspNetCore.Authentication.MicrosoftAccount" Version="$(AspNetCorePackagesVersion)" />
		<PackageManagement Include="Microsoft.AspNetCore.Authentication.OpenIdConnect" Version="$(AspNetCorePackagesVersion)" />
		<PackageManagement Include="Microsoft.AspNetCore.Authentication.Twitter" Version="$(AspNetCorePackagesVersion)" />
		<PackageManagement Include="Microsoft.AspNetCore.DataProtection.StackExchangeRedis" Version="$(AspNetCorePackagesVersion)" />
		<PackageManagement Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="$(AspNetCorePackagesVersion)" />
		<PackageManagement Include="Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation" Version="$(AspNetCorePackagesVersion)" />
		<PackageManagement Include="Microsoft.AspNetCore.Mvc.Testing" Version="$(AspNetCorePackagesVersion)" />
		<PackageManagement Include="Microsoft.AspNetCore.Owin" Version="$(AspNetCorePackagesVersion)" />
	</ItemGroup>

	<!-- 'Microsoft.Extensions' packages that are not included in the ASP.NET Core shared framework -->
	<ItemGroup>
		<PackageManagement Include="Microsoft.Extensions.Caching.StackExchangeRedis" Version="$(MicrosoftExtensionsPackagesVersion)" />
		<PackageManagement Include="Microsoft.Extensions.Http.Polly" Version="$(MicrosoftExtensionsPackagesVersion)" />
	</ItemGroup>

</Project>