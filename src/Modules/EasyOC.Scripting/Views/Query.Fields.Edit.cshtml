@model  OrchardCore.Queries.ViewModels.EditQueryViewModel

<div class="mb-3" asp-validation-class-for="Name">
    <label asp-for="Name">@T["Name"]</label>
    <input asp-for="Name" class="form-control text-muted" autofocus />
    <span asp-validation-for="Name"></span>
    <span class="hint">@T["The technical name of the query."]</span>
    <input asp-for="Source" type="hidden" />
</div>

<div class="mb-3">
    <label asp-for="Schema">@T["Schema"]</label>
    <textarea asp-for="Schema" hidden rows="12" class="form-control" style="text-align:left"></textarea>
    <div id="@Html.IdFor(x=>x.Schema)_editor" style="min-height: 300px;" class="form-control"></div>
    <span class="hint">@T["The schema the GraphQL API will use to return results."] <a class="seedoc" href="@(OrchardCore.Admin.Constants.DocsUrl)reference/modules/Queries/#graphql" target="_blank">@T["See documentation"]</a></span>
</div>
<script asp-name="monaco" depends-on="admin" at="Foot"></script>

<script at="Foot" depends-on="monaco">
    $(document).ready(function () {
        require(['vs/editor/editor.main'], function () {

            var html = document.getElementsByTagName("html")[0];
            const mutationObserver = new MutationObserver(setTheme);
            mutationObserver.observe(html, { attributes: true });

            function setTheme() {
                var theme = html.dataset.theme;
                if (theme === "darkmode") {
                    monaco.editor.setTheme('vs-dark')
                } else {
                    monaco.editor.setTheme('vs')
                }
            }
            setTheme();


            var editor = monaco.editor.create(document.getElementById('@Html.IdFor(m => m.Schema)_editor'), {
                automaticLayout: true,
                language: "json",
                lineNumbers: true,
                minimap: { enabled: false }
            });

            var textArea = document.getElementById('@Html.IdFor(m => m.Schema)');
            editor.getModel().setValue(textArea.value);
            window.addEventListener("submit", function () {
                textArea.value = editor.getValue();
            });
        });
    });
</script>