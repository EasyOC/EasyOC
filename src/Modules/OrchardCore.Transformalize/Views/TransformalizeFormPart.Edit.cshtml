@model EditTransformalizeFormPartViewModel
@using TransformalizeModule.ViewModels
@using TransformalizeModule

@{
   var Area = Common.ModuleName;
   var ContentItemId = Model.TransformalizeFormPart.ContentItem.ContentItemId;
   var xmlLink = Url.Action("Run", "Form", new { Format = "xml", Area, ContentItemId });
   var jsonLink = Url.Action("Run", "Form", new { Format = "json", Area, ContentItemId });
   var viewLink = Url.Action("Index", "Form", new { Area, ContentItemId });
}

<fieldset>
   <div class="btn-group float-right" role="group">
      <a title="view this task"
         role="button"
         class="btn btn-success btn-sm"
         href="@viewLink">
         <span class="fas fa-eye"></span>
      </a>
      <a title="run this report as xml"
         href="@xmlLink"
         class="btn btn-primary btn-sm"
         role="button">
         <span class="fas fa-code"></span>
      </a>
      <a title="run this report as json"
         role="button"
         class="btn btn-secondary btn-sm"
         href="@jsonLink">
         <span class="fas fa-exchange-alt"></span>
      </a>
   </div>
</fieldset>

@if (Model.CreateCommand != string.Empty) {
   <fieldset>

      <table class="table table-sm">
         <thead>
            <tr>
               <th scope="col">Type</th>
               <th scope="col">Command</th>
            </tr>
         </thead>
         <tbody>
            <tr>
               <td>Create</td>
               <td><code>@Model.CreateCommand</code></td>
            </tr>
            <tr>
               <td>Insert</td>
               <td><code>@Model.InsertCommand</code></td>
            </tr>
            <tr>
               <td>Update</td>
               <td><code>@Model.UpdateCommand</code></td>
            </tr>
            <tr>
               <td>Select</td>
               <td><code>@Model.SelectCommand</code></td>
            </tr>
         </tbody>
      </table>

   </fieldset>
}


