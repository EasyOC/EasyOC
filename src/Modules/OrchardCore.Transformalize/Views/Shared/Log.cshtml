@model LogViewModel
@using Microsoft.Extensions.DependencyInjection;
@using Transformalize.Contracts
@using Microsoft.AspNetCore.Authorization
@using TransformalizeModule

@{
   var auth = Context.RequestServices.GetService<IAuthorizationService>();
   var returnUrl = string.Empty;
   var target = "_self";
   if (Model.Item != null) {
      // You might not want to re-run your task automatically
      if (Model.Item.ContentType == "TransformalizeTask") {
         target = "_blank";
      } else {
         returnUrl = System.Net.WebUtility.UrlEncode(Context.Request.Path + Context.Request.QueryString);
      }
   }
}
<style>
   .table-sm > tbody > tr > td {
      padding: 2px;
   }

   div.table-responsive {
      min-height: 600px;
   }

   main.container {
      max-width: 98%;
   }
</style>

@if (Model.Item != null && await auth.AuthorizeAsync(Context.User, OrchardCore.Contents.Permissions.EditContent, Model.Item)) {
   <button title="edit this report" type="button" class="btn btn-warning btn-sm float-end" onclick="window.open('@(Url.Content("~/Admin/Contents/ContentItems/" + Model.Item.ContentItemId + "/Edit?" + Common.ReturnUrlName + "=" + returnUrl))', '@target');">
      <span class="fas fa-edit"></span>
   </button>
}

@Html.Partial("LogDetail", Model)