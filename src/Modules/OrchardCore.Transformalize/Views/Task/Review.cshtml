@model TransformalizeResponse<TransformalizeTaskPart>
@using TransformalizeModule
@using Microsoft.Extensions.DependencyInjection
@using Microsoft.AspNetCore.Authorization
@using TransformalizeModule.Models

@{
   RenderTitleSegments(Model.Title, "before");

   var auth = Context.RequestServices.GetService<IAuthorizationService>();
}

<script asp-name="jQuery" at="Head"></script>
<script asp-name="jQuery-ui" at="Head"></script>
<script asp-name="block-ui" version="2.70.0" at="Foot"></script>
<script asp-name="pickadate-picker-date" version="3.6.4" at="Foot"></script>
<script asp-name="parsley" version="2.9.2" at="Foot"></script>
<script asp-name="moment" version="2.26.0" at="Foot"></script>
@*the order of these file handling scripts matters*@
<script asp-name="load-image-all" version="5.14.0" at="Head"></script>
<script asp-name="canvas-to-blob" version="3.28.0" at="Head"></script>
<script asp-name="jquery-iframe-transport" version="10.31.0" at="Head"></script>
<script asp-name="jquery-fileupload" version="10.31.0" at="Head"></script>
<script asp-name="jquery-fileupload-process" version="10.31.0" at="Head"></script>
<script asp-name="jquery-fileupload-image" version="10.31.0" at="Head"></script>
<script asp-name="bs-custom-file-input" version="1.3.4" at="Head"></script>
<script asp-name="jquery-are-you-sure" version="1.9.0" at="Head"></script>

<script asp-src="~/@Common.ModuleName/Scripts/form.js?v=6" at="Foot"></script>
<script asp-src="~/@Common.ModuleName/Scripts/file.handler.js?v=2" at="Foot"></script>

<style asp-name="pickadate-themes-default" version="3.6.4"></style>
<style asp-name="pickadate-themes-default-date" version="3.6.4"></style>

<style>

   /* to stop ios from zooming in on inputs */
   body {
      font-size: 16px;
   }   

   #busy {
      position: fixed;
      left: 46%;
      top: 40%;
      display: none;
      background: transparent url(@Url.Content($"~/{Common.ModuleName}/Styles/busy.gif"));
      background-size: 149px 149px;
      background-repeat: no-repeat;
      z-index: 1020;
      height: 150px;
      width: 150px;
   }

   #busy-holder {
      background: transparent;
      width: 100%;
      height: 100%;
   }

   .help-block {
      color: red;
   }

   .form-control:focus {
      border-color: #66AFE9;
   }

   input:invalid {
      border-color: red;
   }

   label.focus {
      border-color: #66afe9;
      outline: 0;
      box-shadow: inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px rgba(102, 175, 233, 0.6);
   }
</style>

<script type="text/javascript" language="javascript">
    //<!--
   var settings = {
      location: {
         enabled: false
      },
      controller: "Task",
      ajaxUrl: "@(Url.Action("Form", "Task", new { Area = Common.ModuleName, ContentItemId = Model.ContentItem.ContentItemId }))",
      updateUrl: "@(Url.Action("Review", "Task", new { Area = Common.ModuleName, ContentItemId = Model.ContentItem.ContentItemId }))",
      runUrl: "@(Url.Action("Run", "Task", new { Area = Common.ModuleName, ContentItemId = Model.ContentItem.ContentItemId }))",
      uploadUrl: "@(Url.Action("Upload", "File", new { Area = Common.ModuleName }))",
      scanUrl: "@(Url.Action("Scan", "File", new { Area = Common.ModuleName }))"
   }
   //-->
</script>

<div class="container">
   @if (Model.ContentItem != null && await auth.AuthorizeAsync(Context.User, OrchardCore.Contents.Permissions.EditContent, Model.ContentItem)) {
      <button title="edit this task" type="button" class="btn btn-warning btn-sm float-end" onclick="window.open('@(Url.Content("~/Admin/Contents/ContentItems/" + Model.ContentItem.ContentItemId + "/Edit?" + Common.ReturnUrlName + "=" + System.Net.WebUtility.UrlEncode(Context.Request.Path + Context.Request.QueryString)))', '_self');">
         <span class="fas fa-edit"></span>
      </button>
   }
   <div class="row">
      <div class="col-md-4">
         <h4>Task Summary</h4>

         <table class="table table-striped table-bordered table-sm">
            <tbody>
               <tr>
                  <td>Title</td>
                  <td>@Model.ContentItem.DisplayText</td>
               </tr>
               <tr>
                  <td>Parameters</td>
                  <td>@Model.Process.Parameters.Count</td>
               </tr>
               <tr>
                  <td>Connections</td>
                  <td>@Model.Process.Connections.Count</td>
               </tr>
               <tr>
                  <td>Actions</td>
                  <td>@Model.Process.Actions.Count</td>
               </tr>
               <tr>
                  <td>Entities</td>
                  <td>@Model.Process.Entities.Count</td>
               </tr>
               <tr>
                  <td>Relationships</td>
                  <td>@Model.Process.Relationships.Count</td>
               </tr>
            </tbody>
         </table>

         @if (Model.Process.Actions.Any()) {
            <h4>Actions</h4>
            <table class="table table-striped table-bordered table-sm">
               <thead>
                  <tr>
                     <th>Type</th>
                     <th>Description</th>
                     <th>Error Mode</th>
                  </tr>
               </thead>
               <tbody>
                  @foreach (var action in Model.Process.Actions) {
                     <tr>
                        <td>@action.Type</td>
                        <td>@action.Description</td>
                        <td>@action.ToErrorMode()</td>
                     </tr>
                  }
               </tbody>
            </table>
         }
      </div>
      <div class="col-md-8">
         <h4>Parameters</h4>
         <div id="id_content">
            @{ Html.RenderPartial("Form", Model.Process); }
         </div>
      </div>
   </div>
</div>

<div id="busy_holder">
   <div id="busy"></div>
</div>

