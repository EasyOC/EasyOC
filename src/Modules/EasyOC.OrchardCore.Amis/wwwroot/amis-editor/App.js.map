{"version":3,"sources":["/App.tsx"],"names":[],"mappings":";;;;;AAAA,wDAA0B;AAC1B,yCAAoC;AACpC,6BAA2C;AAC3C,wDAA0B;AAC1B,uCAAwC;AACxC,gEAAsC;AACtC,gFAAqC;AAErC;IACI,IAAM,KAAK,GAAG,CAAE,MAAc,CAAC,KAAK,GAAG,iBAAS,CAAC,MAAM,CACnD,EAAE,EACF;QACI,OAAO,EAAE,UAAC,EAAgC;gBAA/B,GAAG,WAAE,MAAM,cAAE,IAAI,YAAE,MAAM;YAChC,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;YACtB,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,IAAI,EAAE,CAAC;YACtC,MAAM,CAAC,eAAe,GAAG,IAAI,CAAC;YAE9B,IAAI,MAAM,KAAK,MAAM,IAAI,MAAM,KAAK,KAAK,IAAI,MAAM,KAAK,OAAO,EAAE;gBAC7D,IAAI,IAAI,EAAE;oBACN,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;iBACxB;gBACD,OAAQ,eAAa,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;aAC9C;iBAAM,IAAI,IAAI,IAAI,IAAI,YAAY,QAAQ,EAAE;gBACzC,yCAAyC;gBACzC,0DAA0D;aAC7D;iBAAM,IACH,IAAI;gBACJ,OAAO,IAAI,KAAK,QAAQ;gBACxB,CAAC,CAAC,IAAI,YAAY,IAAI,CAAC;gBACvB,CAAC,CAAC,IAAI,YAAY,WAAW,CAAC,EAChC;gBACE,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBAC5B,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,GAAG,kBAAkB,CAAC;aACvD;YAED,OAAQ,eAAa,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;QACrD,CAAC;QACD,QAAQ,EAAE,UAAC,CAAM,IAAK,sBAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAjB,CAAiB;QACvC,MAAM,EAAE,UAAC,IAAkC,EAAE,GAAW;YACpD,YAAK,CAAC,IAAI,CAAC;gBACP,CAAC,CAAC,YAAK,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,IAAI,KAAK,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC;gBACtD,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;YAC1C,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;QACvC,CAAC;QACD,KAAK;QACL,OAAO;QACP,IAAI,EAAE,UAAC,QAAgB,EAAE,OAAiB;YAAjB,sCAAiB;YACtC,IAAM,GAAG,GAAG,2BAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;YACpC,GAAG,IAAI,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,KAAK,IAAI,CAAC,IAAI,YAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACxE,OAAO,GAAG,CAAC;QACf,CAAC;KACJ,CACJ,CAAC,CAAC;IAEH,OAAO,CACH,8BAAC,qBAAQ,IAAC,KAAK,EAAE,KAAK;QAClB,8BAAC,eAAS,IAAC,KAAK,EAAE,KAAK,GAAI,CACpB,CACd,CAAC;AACN,CAAC;AAnDD,4BAmDC","file":"App.js","sourcesContent":["import React from 'react';\r\nimport {Provider} from 'mobx-react';\r\nimport {toast, alert, confirm} from 'amis';\r\nimport axios from 'axios';\r\nimport {MainStore} from './store/index';\r\nimport RootRoute from './route/index';\r\nimport copy from 'copy-to-clipboard';\r\n\r\nexport default function(): JSX.Element {\r\n    const store = ((window as any).store = MainStore.create(\r\n        {},\r\n        {\r\n            fetcher: ({url, method, data, config}: any) => {\r\n                config = config || {};\r\n                config.headers = config.headers || {};\r\n                config.withCredentials = true;\r\n\r\n                if (method !== 'post' && method !== 'put' && method !== 'patch') {\r\n                    if (data) {\r\n                        config.params = data;\r\n                    }\r\n                    return (axios as any)[method](url, config);\r\n                } else if (data && data instanceof FormData) {\r\n                    // config.headers = config.headers || {};\r\n                    // config.headers['Content-Type'] = 'multipart/form-data';\r\n                } else if (\r\n                    data &&\r\n                    typeof data !== 'string' &&\r\n                    !(data instanceof Blob) &&\r\n                    !(data instanceof ArrayBuffer)\r\n                ) {\r\n                    data = JSON.stringify(data);\r\n                    config.headers['Content-Type'] = 'application/json';\r\n                }\r\n\r\n                return (axios as any)[method](url, data, config);\r\n            },\r\n            isCancel: (e: any) => axios.isCancel(e),\r\n            notify: (type: 'success' | 'error' | 'info', msg: string) => {\r\n                toast[type]\r\n                    ? toast[type](msg, type === 'error' ? '系统错误' : '系统消息')\r\n                    : console.warn('[Notify]', type, msg);\r\n                console.log('[notify]', type, msg);\r\n            },\r\n            alert,\r\n            confirm,\r\n            copy: (contents: string, options: any = {}) => {\r\n                const ret = copy(contents, options);\r\n                ret && (!options || options.shutup !== true) && toast.info('内容已拷贝到剪切板');\r\n                return ret;\r\n            }\r\n        }\r\n    ));\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <RootRoute store={store} />\r\n        </Provider>\r\n    );\r\n}\r\n"]}