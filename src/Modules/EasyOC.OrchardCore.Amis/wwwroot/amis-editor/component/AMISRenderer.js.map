{"version":3,"sources":["/component/AMISRenderer.tsx"],"names":[],"mappings":"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","file":"AMISRenderer.js","sourcesContent":["import React from 'react';\r\nimport {RouteComponentProps, withRouter} from 'react-router';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {getEnv} from 'mobx-state-tree';\r\nimport {IMainStore} from '../store';\r\nimport qs from 'qs';\r\nimport {render, utils, filter} from 'amis';\r\n\r\nexport function schema2component(schema: any, transform?: Function, session: string = 'page') {\r\n    interface SchemaRendererProps extends RouteComponentProps<{}> {\r\n        store: IMainStore;\r\n        [propName: string]: any;\r\n    }\r\n\r\n    @inject('store')\r\n    @observer\r\n    class SchemaRenderer extends React.Component<SchemaRendererProps> {\r\n        static displayName = 'SchemaRenderer';\r\n        env: any;\r\n\r\n        getEnv() {\r\n            if (this.env) {\r\n                return this.env;\r\n            }\r\n\r\n            const props = this.props;\r\n            const store = props.store;\r\n            const rootEnv = getEnv(store);\r\n\r\n            const normalizeLink = (to: string, preserveHash?: boolean) => {\r\n                if (/^\\/api\\//.test(to)) {\r\n                    return to;\r\n                }\r\n\r\n                to = to || '';\r\n                const history = this.props.history;\r\n                const location = history.location;\r\n                const currentQuery = qs.parse(location.search.substring(1));\r\n                to = filter(to.replace(/\\$\\$/g, qs.stringify(currentQuery)), currentQuery);\r\n\r\n                if (to && to[0] === '#') {\r\n                    to = location.pathname + location.search + to;\r\n                } else if (to && to[0] === '?') {\r\n                    to = location.pathname + to;\r\n                }\r\n\r\n                const idx = to.indexOf('?');\r\n                const idx2 = to.indexOf('#');\r\n                let pathname = ~idx ? to.substring(0, idx) : ~idx2 ? to.substring(0, idx2) : to;\r\n                let search = ~idx ? to.substring(idx, ~idx2 ? idx2 : undefined) : '';\r\n                let hash = ~idx2 ? to.substring(idx2) : preserveHash ? location.hash : '';\r\n\r\n                if (!pathname) {\r\n                    pathname = location.pathname;\r\n                } else if (pathname[0] != '/' && !/^\\w+\\:/.test(pathname)) {\r\n                    let relativeBase = location.pathname;\r\n                    const paths = relativeBase.split('/');\r\n                    paths.pop();\r\n                    let m;\r\n                    while ((m = /^\\.\\.?\\//.exec(pathname))) {\r\n                        if (m[0] === '../') {\r\n                            paths.pop();\r\n                        }\r\n                        pathname = pathname.substring(m[0].length);\r\n                    }\r\n                    pathname = paths.concat(pathname).join('/');\r\n                }\r\n\r\n                return pathname + search + hash;\r\n            };\r\n\r\n            const isCurrentUrl = (to: string) => {\r\n                const history = this.props.history;\r\n                const link = normalizeLink(to);\r\n                const location = history.location;\r\n                let pathname = link;\r\n                let search = '';\r\n                const idx = link.indexOf('?');\r\n                if (~idx) {\r\n                    pathname = link.substring(0, idx);\r\n                    search = link.substring(idx);\r\n                }\r\n\r\n                if (search) {\r\n                    if (pathname !== location.pathname || !location.search) {\r\n                        return false;\r\n                    }\r\n                    const currentQuery = qs.parse(location.search.substring(1));\r\n                    const query = qs.parse(search.substring(1));\r\n\r\n                    return Object.keys(query).every(key => query[key] === currentQuery[key]);\r\n                } else if (pathname === location.pathname) {\r\n                    return true;\r\n                }\r\n\r\n                return false;\r\n            };\r\n\r\n            return (this.env = {\r\n                ...rootEnv,\r\n                session,\r\n                isCurrentUrl,\r\n                updateLocation:\r\n                    props.updateLocation ||\r\n                    ((location: string, replace: boolean) => {\r\n                        const history = this.props.history;\r\n                        if (location === 'goBack') {\r\n                            return history.goBack();\r\n                        } else if (/^https?\\:\\/\\//.test(location)) {\r\n                            return (window.location.href = location);\r\n                        }\r\n\r\n                        history[replace ? 'replace' : 'push'](normalizeLink(location, replace));\r\n                    }),\r\n                jumpTo:\r\n                    props.jumpTo ||\r\n                    ((to: string, action?: any) => {\r\n                        const history = this.props.history;\r\n                        if (to === 'goBack') {\r\n                            return history.goBack();\r\n                        }\r\n\r\n                        to = normalizeLink(to);\r\n\r\n                        if (isCurrentUrl(to)) {\r\n                            return;\r\n                        }\r\n\r\n                        if (action && action.actionType === 'url') {\r\n                            action.blank === false ? (window.location.href = to) : window.open(to, '_blank');\r\n                            return;\r\n                        } else if (action && action.blank) {\r\n                            window.open(to, '_blank');\r\n                            return;\r\n                        }\r\n\r\n                        if (/^https?:\\/\\//.test(to)) {\r\n                            window.location.href = to;\r\n                        } else {\r\n                            history.push(to);\r\n                        }\r\n                    }),\r\n                affixOffsetTop: props.embedMode ? 0 : 50,\r\n                theme: store.theme\r\n            });\r\n        }\r\n\r\n        render() {\r\n            const {\r\n                router,\r\n                match,\r\n                location,\r\n                history,\r\n                store,\r\n                schema: schemaProp,\r\n                jumpTo,\r\n                updateLocation,\r\n                embedMode,\r\n                ...rest\r\n            } = this.props;\r\n            const finalSchema = schemaProp || schema;\r\n            let body: React.ReactNode;\r\n\r\n            finalSchema.type || (finalSchema.type = 'page');\r\n\r\n            body = render(\r\n                finalSchema,\r\n                {\r\n                    location,\r\n                    data: utils.createObject({\r\n                        ...match.params,\r\n                        amisStore: store,\r\n                        pathname: location.pathname,\r\n                        params: match.params\r\n                    }),\r\n                    ...rest,\r\n                    propsTransform: transform\r\n                },\r\n                this.getEnv()\r\n            );\r\n\r\n            return <>{body}</>;\r\n        }\r\n    }\r\n\r\n    return withRouter(SchemaRenderer);\r\n}\r\n\r\nexport default schema2component({type: 'page', body: 'It works'});\r\n"]}