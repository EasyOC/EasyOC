{"version":3,"sources":["/route/Preview.tsx"],"names":[],"mappings":"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","file":"Preview.js","sourcesContent":["import React from 'react';\r\nimport {observer, inject} from 'mobx-react';\r\nimport {IMainStore} from '../store';\r\nimport {Button, AsideNav, Layout, confirm} from 'amis';\r\nimport {RouteComponentProps, matchPath, Switch, Route} from 'react-router';\r\nimport {Link} from 'react-router-dom';\r\nimport NotFound from './NotFound';\r\nimport AMISRenderer from '../component/AMISRenderer';\r\nimport AddPageModal from '../component/AddPageModal';\r\n\r\nfunction isActive(link: any, location: any) {\r\n    const ret = matchPath(location.pathname, {\r\n        path: link ? link.replace(/\\?.*$/, '') : '',\r\n        exact: true,\r\n        strict: true\r\n    });\r\n\r\n    return !!ret;\r\n}\r\n\r\nexport default inject('store')(\r\n    observer(function ({store, location, history}: {store: IMainStore} & RouteComponentProps) {\r\n        function renderHeader() {\r\n            return (\r\n                <div>\r\n                    <div className={`a-Layout-brandBar`}>\r\n                        <button onClick={store.toggleOffScreen} className=\"pull-right visible-xs\">\r\n                            <i className=\"glyphicon glyphicon-align-justify\"></i>\r\n                        </button>\r\n                        <div className={`a-Layout-brand`}>\r\n                            <i className=\"fa fa-paw\"></i>\r\n                            <span className=\"hidden-folded m-l-sm\">AMIS 编辑器</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className={`a-Layout-headerBar`}>\r\n                        <div className=\"hidden-xs p-t-sm pull-right\">\r\n                            <Button size=\"sm\" className=\"m-r-xs\" level=\"success\" disabled disabledTip=\"Todo...\">\r\n                                全部导出\r\n                            </Button>\r\n                            <Button size=\"sm\" level=\"info\" onClick={() => store.setAddPageIsOpen(true)}>\r\n                                新增页面\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        function renderAside() {\r\n            const navigations = store.pages.map(item => ({\r\n                label: item.label,\r\n                path: `/${item.path}`,\r\n                icon: item.icon\r\n            }));\r\n            const paths = navigations.map(item => item.path);\r\n\r\n            return (\r\n                <AsideNav\r\n                    key={store.asideFolded ? 'folded-aside' : 'aside'}\r\n                    navigations={[\r\n                        {\r\n                            label: '导航',\r\n                            children: navigations\r\n                        }\r\n                    ]}\r\n                    renderLink={({link, toggleExpand, classnames: cx, depth}: any) => {\r\n                        if (link.hidden) {\r\n                            return null;\r\n                        }\r\n\r\n                        let children = [];\r\n\r\n                        if (link.children) {\r\n                            children.push(\r\n                                <span\r\n                                    key=\"expand-toggle\"\r\n                                    className={cx('AsideNav-itemArrow')}\r\n                                    onClick={e => toggleExpand(link, e)}\r\n                                ></span>\r\n                            );\r\n                        }\r\n\r\n                        link.badge &&\r\n                            children.push(\r\n                                <b key=\"badge\" className={cx(`AsideNav-itemBadge`, link.badgeClassName || 'bg-info')}>\r\n                                    {link.badge}\r\n                                </b>\r\n                            );\r\n\r\n                        if (link.icon) {\r\n                            children.push(<i key=\"icon\" className={cx(`AsideNav-itemIcon`, link.icon)} />);\r\n                        } else if (store.asideFolded && depth === 1) {\r\n                            children.push(\r\n                                <i\r\n                                    key=\"icon\"\r\n                                    className={cx(`AsideNav-itemIcon`, link.children ? 'fa fa-folder' : 'fa fa-info')}\r\n                                />\r\n                            );\r\n                        }\r\n\r\n                        link.active ||\r\n                            children.push(\r\n                                <i\r\n                                    key=\"delete\"\r\n                                    data-tooltip=\"删除\"\r\n                                    data-position=\"bottom\"\r\n                                    className={'navbtn fa fa-times'}\r\n                                    onClick={(e: React.MouseEvent) => {\r\n                                        e.preventDefault();\r\n                                        confirm('确认要删除').then(confirmed => {\r\n                                            confirmed && store.removePageAt(paths.indexOf(link.path));\r\n                                        });\r\n                                    }}\r\n                                />\r\n                            );\r\n\r\n                        children.push(\r\n                            <i\r\n                                key=\"edit\"\r\n                                data-tooltip=\"编辑\"\r\n                                data-position=\"bottom\"\r\n                                className={'navbtn fa fa-pencil'}\r\n                                onClick={(e: React.MouseEvent) => {\r\n                                    e.preventDefault();\r\n                                    history.push(`/edit/${paths.indexOf(link.path)}`);\r\n                                }}\r\n                            />\r\n                        );\r\n\r\n                        children.push(\r\n                            <span key=\"label\" className={cx('AsideNav-itemLabel')}>\r\n                                {link.label}\r\n                            </span>\r\n                        );\r\n\r\n                        return link.path ? (\r\n                            link.active ? (\r\n                                <a>{children}</a>\r\n                            ) : (\r\n                                <Link to={link.path[0] === '/' ? link.path : `${link.path}`}>{children}</Link>\r\n                            )\r\n                        ) : (\r\n                            <a\r\n                                onClick={\r\n                                    link.onClick ? link.onClick : link.children ? () => toggleExpand(link) : undefined\r\n                                }\r\n                            >\r\n                                {children}\r\n                            </a>\r\n                        );\r\n                    }}\r\n                    isActive={(link: any) =>\r\n                        isActive(link.path && link.path[0] === '/' ? link.path : `${link.path}`, location)\r\n                    }\r\n                />\r\n            );\r\n        }\r\n\r\n        function handleConfirm(value: {label: string; icon: string; path: string}) {\r\n            store.addPage({\r\n                ...value,\r\n                schema: {\r\n                    type: 'page',\r\n                    title: value.label,\r\n                    body: '这是你刚刚新增的页面。'\r\n                }\r\n            });\r\n            store.setAddPageIsOpen(false);\r\n        }\r\n\r\n        return (\r\n            <Layout\r\n                aside={renderAside()}\r\n                header={renderHeader()}\r\n                folded={store.asideFolded}\r\n                offScreen={store.offScreen}\r\n            >\r\n                <Switch>\r\n                    {store.pages.map(item => (\r\n                        <Route\r\n                            key={item.id}\r\n                            path={`/${item.path}`}\r\n                            render={() => <AMISRenderer schema={item.schema} />}\r\n                        />\r\n                    ))}\r\n                    <Route component={NotFound} />\r\n                </Switch>\r\n                <AddPageModal\r\n                    show={store.addPageIsOpen}\r\n                    onClose={() => store.setAddPageIsOpen(false)}\r\n                    onConfirm={handleConfirm}\r\n                    pages={store.pages.concat()}\r\n                />\r\n            </Layout>\r\n        );\r\n    })\r\n);\r\n"]}